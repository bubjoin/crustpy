<윈도우즈에서 파이썬 개발환경 꾸미고 코드를 실행해보기>

윈도우즈에 파이썬 설치 - VSCode 설치까지 마친 후라고 가정합니다
(파이썬 설치시에는 꼭 Add Python 3.10 to PATH에 체크합니다).

1. VSCode 화면 맨 좌측의 세로 줄 메뉴에는 사각형 블록 모양이 있는데, 
이것을 누르면 나오는 검색어 입력 창에 python 이라고 입력하면 
확장 프로그램들이 검색됩니다. 

검색된 것 중 가장 위에 있는 Python 을 선택하면 오른쪽에 설명이
나옵니다. 다운로드가 4800만회인데, 설치하기를 선택합니다. 
다시 화면 좌측 메뉴에서 맨 위에 있는 서류 모양을 누르면 
VSCode 탐색기와 기본 편집 화면으로 돌아옵니다.

2. VSCode를 실행하고 test.py 파일이 들어있는 작업 디렉토리를 엽니다
(메뉴-파일-폴더열기-폴더선택). 화면 좌측 VSCode 탐색기에 
작업 폴더에 들어 있는 test.py 파일이 보입니다.

3. VSCode에서 메뉴-터미널-새 터미널을 엽니다. 터미널이 뜨면,

python -m venv .venv

라고 입력하여 가상환경을 만듭니다.
VSCode의 프로젝트 폴더 안에 .venv라는 디렉토리가 생깁니다
(.venv는 가상환경 이름 예시입니다).

4. 화면에 파이썬 인터프리터를 가상환경의 것으로 바꾸시겠냐고 
나오면 예스를 누릅니다. 그런 말이 나오지 않으면, VSCode의 화면
좌측 하단 줄에 파이썬 인터프리터 선택 메뉴를 눌러서 방금 만든
.venv로 시작하는 가상환경의 파이썬 인터프리터를 선택합니다(중요).

5. 이제 터미널에 명령어를 입력하여 가상환경에 직접 진입하시거나
(예 : .venv/Scripts/activate 라고 입력),

6. VSCode에서 메뉴-터미널-새 터미널을 누르면
터미널이 열리면서 자동으로 가상환경에 진입합니다.
가상환경에 진입하면 쉘 앞에 (.venv)라고 가상환경 이름이 붙습니다.

7. 가상환경 진입이 된 상태에서 pip 명령어로 필요한 패키지를
설치하면 그 파이썬 가상환경의 안에만 패키지가 설치되고, 시스템에
설치된 파이썬이나 다른 파이썬 가상환경에는 패키지가 설치되지 않아
작업 공간을 깔끔하게 분리할 수 있습니다.

8. 이제 가상환경에 진입된 터미널에서 
커맨드라인에 다음 명령어를 입력하여 gTTS(Google Text-to-Speech)를 
가상환경에 설치합니다.

pip install gTTS

9. 패키지 설치가 완료되면, VSCode 메뉴-실행-디버깅 없이 실행을
선택합니다.

10. 터미널에 코드가 실행되고 있는 모습이 나오고, 잠시 기다리면
작업 디렉토리 안에 mp3 파일이 생성된 것을 볼 수 있습니다.

윈도우즈 탐색기를 실행하여 위 소리 파일을 찾아 열어보면,
test.py 파일에서 입력한 텍스트를 바탕으로 음성합성이 이루어진 것을
들을 수 있습니다. 텍스트를 바꿔서 다시 실행해봅니다.